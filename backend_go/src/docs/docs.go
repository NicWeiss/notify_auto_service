// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/acceptors": {
            "get": {
                "description": "Getting acceptors which user created",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Getting acceptors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session token",
                        "name": "Session",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of acceptorss",
                        "schema": {
                            "$ref": "#/definitions/schemas.EmberAcceptors"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login, create new session, return auth cookies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login in system",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/schemas.LoginParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session token",
                        "schema": {
                            "$ref": "#/definitions/schemas.SessionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Getting notify categories which user created",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Getting notify categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session token",
                        "name": "Session",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "schema": {
                            "$ref": "#/definitions/schemas.EmberCategories"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/notifies": {
            "get": {
                "description": "Getting notify  which user created",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Getting notifies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Id for select only linked notifies",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Session token",
                        "name": "Session",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of notifies",
                        "schema": {
                            "$ref": "#/definitions/schemas.EmberNotifies"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions": {
            "get": {
                "description": "Getting sessions which user created",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Getting sessions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session token",
                        "name": "Session",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sessions",
                        "schema": {
                            "$ref": "#/definitions/schemas.EmberSessions"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/systems": {
            "get": {
                "description": "Getting systems available for sending",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Getting systems",
                "responses": {
                    "200": {
                        "description": "List of systems",
                        "schema": {
                            "$ref": "#/definitions/schemas.EmberSystems"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "Getting data obout current authorized user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Getting user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session token",
                        "name": "Session",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Current user",
                        "schema": {
                            "$ref": "#/definitions/schemas.EmberUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api_utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api_utils.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api_utils.ErrorData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "api_utils.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/api_utils.ErrorData"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.Acceptor": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "is_disabled": {
                    "type": "boolean"
                },
                "is_system": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "system_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "is_hidden": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Notify": {
            "type": "object",
            "properties": {
                "acceptors": {},
                "autodisable_at": {
                    "type": "string"
                },
                "category_id": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "day_of_week": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_autodisable": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "is_disabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "periodic": {
                    "type": "string"
                },
                "repeate_interval": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Session": {
            "type": "object",
            "properties": {
                "client": {},
                "expire_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "location": {},
                "session": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.System": {
            "type": "object",
            "properties": {
                "help": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "is_disabled": {
                    "type": "boolean"
                },
                "is_system": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "registred_at": {
                    "type": "string"
                }
            }
        },
        "schemas.EmberAcceptors": {
            "type": "object",
            "properties": {
                "acceptor": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Acceptor"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/schemas.EmberMeta"
                }
            }
        },
        "schemas.EmberCategories": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Category"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/schemas.EmberMeta"
                }
            }
        },
        "schemas.EmberMeta": {
            "type": "object",
            "properties": {
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "schemas.EmberNotifies": {
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/schemas.EmberMeta"
                },
                "notify": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Notify"
                    }
                }
            }
        },
        "schemas.EmberSessions": {
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/schemas.EmberMeta"
                },
                "session": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Session"
                    }
                }
            }
        },
        "schemas.EmberSystems": {
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/schemas.EmberMeta"
                },
                "system": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.System"
                    }
                }
            }
        },
        "schemas.EmberUser": {
            "type": "object",
            "properties": {
                "meta": {
                    "$ref": "#/definitions/schemas.EmberMeta"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "schemas.LoginParams": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "schemas.SessionResponse": {
            "type": "object",
            "properties": {
                "session": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
