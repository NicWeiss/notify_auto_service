version: "3.6"


x-logging:
  &default-logging
  driver: json-file
  options:
    max-size: '1m'
    max-file: '1'


services:

  postgres:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_PASSWORD: test
      POSTGRES_USER: test
      POSTGRES_DB: test
    volumes:
      - ../data/postgres:/var/lib/postgresql/data
    ports:
      - "8097:5432"
    container_name: dev_notifier_postgres

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '8095:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass redispass123
    volumes:
      - ../data/redis:/data
    container_name: dev_notifier_redis

  backend_base:
    &backend_base
    build:
      dockerfile: docker/backend/Dockerfile
      context: ../
    env_file:
      - ../backend/.env
    links:
      - postgres
      - postfix
      - rabbit
      - redis
    depends_on:
      - postgres
      - postfix
      - rabbit
      - redis
    volumes:
      - ../backend:/backend
      # - ./backend/grafana.yml:/etc/agent/agent.yaml
    stdin_open: true
    tty: true
    container_name: dev_notifier_backend_base

  backend:
    <<: *backend_base
    ports:
      - "8094:8800"
    command: python run.py
    stdin_open: true
    tty: true
    container_name: dev_notifier_backend

  celery:
    <<: *backend_base
    working_dir: /backend
    environment:
      C_FORCE_ROOT: 'true'
    command: bash -c "sh /backend/start_celery_worker.sh"
    container_name: dev_notifier_celery

  frontend:
    build:
      dockerfile: ./docker/frontend/Dockerfile
      context: ../
      target: dev
    ports:
      - "8093:4200"
    volumes:
      - ../frontend/app:/frontend/app
      - ../frontend/config:/frontend/config
      - ../frontend/public:/frontend/public
      - ../frontend/vendor:/frontend/vendor
      - ../frontend/.ember-cli:/frontend/.ember-cli
      - ../frontend/app.json:/frontend/app.json
      - ../frontend/ember-cli-build.js:/frontend/ember-cli-build.js
      - ../frontend/package.json:/frontend/package.json
#    depends_on:
#      - backend
    working_dir: /frontend
    command: ember s
    container_name: dev_notifier_frontend

  postfix:
    build:
      dockerfile: ./docker/postfix/Dockerfile
      context: ../
    ports:
      - "25:25"
      - "587:587"
    restart: always
    command: bash -c "/run.sh"
    container_name: dev_notifier_postfix
    stdin_open: true
    tty: true
    logging: *default-logging

  rabbit:
    hostname: rabbit
    image: 'rabbitmq:3-management'
    ports:
      - '4369:4369'
      - '5672:5672'
      - '25672:25672'
      - '15672:15672'
    volumes:
      - ../data/rabbitmq2:/var/lib/rabbitmq
    container_name: dev_notifier_rabbit

  flower:
    image: mher/flower
    environment:
        - CELERY_BROKER_URL=amqp://guest:guest@rabbit:5672//
        - FLOWER_PORT=5555
    ports:
        - 8098:5555
    depends_on:
        - rabbit
    container_name: dev_notifier_flower
